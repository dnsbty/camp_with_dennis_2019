# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/elixir:1.8
        environment:
          MIX_ENV: test
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: postgres
    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar
      - restore_cache:
          keys:
            - v1-test-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-test-mix-cache-{{ .Branch }}
            - v1-test-mix-cache
      - restore_cache:
          keys:
            - v1-test-build-cache-{{ .Branch }}
            - v1-test-build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: v1-test-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-test-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-test-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-test-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-test-build-cache
          paths: "_build"
      - run: mix test
  deploy:
    working_directory: ~/app
    docker:
      - image: dnsbty/elixir-build:latest
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          MIX_ENV: prod
    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar
      - restore_cache:
          keys:
            -v1-mix-cache
      - restore_cache:
          keys:
            -v1-build-cache
      - run:
          name: Get Mix dependencies
          command: mix deps.get
      - run:
          name: Compile App
          command: mix compile
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache
          paths: "_build"
      - restore_cache:
          keys:
            -v1-npm-cache
      - restore_cache:
          keys:
            -v1-static-cache
      - run:
          name: Install frontend dependencies
          command: npm i --prefix assets
      - run:
          name: Transpile frontend code
          command: npm run deploy --prefix assets
      - run:
          name: Digest Frontend
          command: |
            MIX_ENV=prod mix phx.digest;
      - save_cache:
          key: v1-npm-cache
          paths: "assets/node_modules"
      - save_cache:
          key: v1-static-cache
          paths: "priv/static"
      - run:
          name: Build App release
          command: mix release --env=prod
      - deploy:
          name: Deploy to Production
          command: |
            ssh-keyscan -H $APP_HOST >> ~/.ssh/known_hosts;
            rsync -ravhz --stats --progress ./_build/prod/rel/$APP_NAME $APP_USER@$APP_HOST:apps;
      - deploy:
          name: Start the app in Production
          command: ./.circleci/post-deploy.sh
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
